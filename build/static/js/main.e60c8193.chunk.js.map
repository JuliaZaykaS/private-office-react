{"version":3,"sources":["components/Section/Section.js","components/TechInfo/TechInfo.js","services/contacts-api.js","redux/auth/auth-operations.js","components/RegisterForm/RegisterForm.js","components/LoginForm/LoginForm.js","components/UserMenu/UserMenu.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","redux/contacts/contact-selectors.js","redux/contacts/contact-operations.js","redux/contacts/contact-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactEditForm/ContactEditForm.js","components/Modal/Modal.js","views/ContactsPage.js","components/Link/Link.js","components/App/App.js","redux/contacts/contact-reducers.js","redux/auth/auth-slice.js","redux/store.js","index.js","components/Navigation/Navigation.module.css","components/ContactListItem/ContactListItem.module.css","components/UserMenu/UserMenu.module.css","components/Section/Section.module.css","components/Modal/Modal.module.css","components/RegisterForm/RegisterForm.module.css","components/LoginForm/LoginForm.module.css","views/ContactsPage.module.css","components/ContactForm/ContactForm.module.css"],"names":["Section","title","children","className","s","section","TechInfo","message","useState","show","setShow","Alert","variant","transition","Heading","Button","onClick","axios","defaults","baseURL","tokenForFetch","token","headers","common","Authorization","register","createAsyncThunk","credentials","thunkAPI","a","post","data","rejectWithValue","response","verify","logIn","logOut","_","getCurrentUser","state","getState","persistToken","auth","get","RegisterForm","dispatch","useDispatch","name","setName","email","setEmail","password","setPassword","onChangeInput","e","currentTarget","value","form","Form","onSubmit","preventDefault","Group","controlId","Label","Control","type","placeholder","required","onChange","LoginForm","UserMenu","userMail","navGreetings","greetings","button","getUserName","user","getUserEmail","getUserToken","getIsLoggedIn","isLoggedIn","getIsCurrentUser","isGetCurrentUser","getError","error","getIsLoading","isLoading","Navigation","useSelector","userEmail","Navbar","bg","sticky","navigation","Container","Brand","exact","to","Nav","navigationBar","navLink","activeClassName","navLinkActive","greetingsBox","userMenu","entrance","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","getContacts","contacts","getFilter","filteredContacts","getFilteredContacts","createSelector","normalizedFilteredName","toLowerCase","filter","contact","includes","fetchContacts","docs","addContacts","phone","deleteContacts","_id","delete","editContacts","patch","filterContacts","createAction","payload","ContactForm","setPhone","find","alert","pattern","Filter","onFindName","InputGroup","Text","id","FormControl","ContactListItem","onBtnClick","onEditBtnClick","ListGroup","Item","contactItem","contactInfo","contactBtn","ContactList","map","number","ContactEditForm","closeFunction","editedContact","doubleContact","modal","document","querySelector","Modal","onClose","clearModal","useEffect","window","addEventListener","onEscClick","removeEventListener","code","createPortal","Overlay","target","ContactsPage","contactsList","errorMessage","setContact","showModal","setShowModal","toggleModal","length","Link","onClickLink","App","currentUser","path","Spinner","animation","createReducer","fulfilled","action","rejected","pending","combineReducers","authSlice","createSlice","initialState","extraReducers","isFetchingCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e60c8193.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h1 className={s.title}>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Alert, Button } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nexport default function TechInfo({ message, children }) {\r\n  const [show, setShow] = useState(true);\r\n  return (\r\n    <>\r\n      <Alert show={show} variant=\"warning\" transition>\r\n        <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Button onClick={() => setShow(false)} variant=\"outline-warning\">\r\n            X\r\n          </Button>\r\n        </div>\r\n      </Alert>\r\n\r\n      {!show && <Button onClick={() => setShow(true)}>Show Alert</Button>}\r\n    </>\r\n  );\r\n}\r\n\r\nTechInfo.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import axios from 'axios';\r\n\r\n// axios.defaults.baseURL = 'https://backend-for-phonebook.up.railway.app/';\r\naxios.defaults.baseURL = 'https://backendforphonebook-sys55.b4a.run/';\r\n\r\nconst tokenForFetch = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport { tokenForFetch };\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { tokenForFetch } from '../../services/contacts-api';\r\n\r\nconst register = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, thunkAPI) => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', credentials);\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message);\r\n    }\r\n  },\r\n);\r\nconst verify = createAsyncThunk(\r\n  'auth/verify',\r\n  async (credentials, thunkAPI) => {\r\n    try {\r\n      await axios.post('/users/verify', credentials);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst logIn = createAsyncThunk('auth/login', async (credentials, thunkAPI) => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    tokenForFetch.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.response.data.message);\r\n  }\r\n});\r\nconst logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    tokenForFetch.unset();\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.response.data.message);\r\n  }\r\n});\r\n\r\nconst getCurrentUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\r\n  const state = thunkAPI.getState();\r\n  const persistToken = state.auth.token;\r\n  if (persistToken === null) {\r\n    return thunkAPI.rejectWithValue();\r\n  }\r\n  tokenForFetch.set(persistToken);\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n    return data;\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.response.data.message);\r\n  }\r\n});\r\n\r\nexport { register, logIn, logOut, getCurrentUser, verify };\r\n","import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { register } from '../../redux/auth/auth-operations';\r\nimport s from './RegisterForm.module.css'\r\n\r\nexport default function RegisterForm() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChangeInput = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmitRegister = e => {\r\n    e.preventDefault();\r\n    dispatch(register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n  return (\r\n    <div className={s.form}>\r\n      <Form onSubmit={onSubmitRegister}>\r\n        <Form.Group className=\"mb-3\" controlId=\"floatingTextarea\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            required\r\n            value={name}\r\n            onChange={onChangeInput}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            name=\"email\"\r\n            required\r\n            value={email}\r\n            onChange={onChangeInput}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            name=\"password\"\r\n            required\r\n            value={password}\r\n            onChange={onChangeInput}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"outline-primary\" type=\"submit\">\r\n          Registration\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn } from '../../redux/auth/auth-operations';\r\nimport s from './LoginForm.module.css'\r\n\r\nexport default function LoginForm() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChangeInput = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmitLogin = e => {\r\n    e.preventDefault();\r\n    dispatch(logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div className={s.form}>\r\n      <Form onSubmit={onSubmitLogin}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            name=\"email\"\r\n            required\r\n            value={email}\r\n            onChange={onChangeInput}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            name=\"password\"\r\n            required\r\n            value={password}\r\n            onChange={onChangeInput}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"outline-primary\" type=\"submit\">\r\n          Log In\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport { Button } from 'react-bootstrap';\r\nimport s from './UserMenu.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function UserMenu({ userMail }) {\r\n  const dispatch = useDispatch();\r\n  const onBtnClick = e => {\r\n    dispatch(logOut());\r\n  };\r\n  return (\r\n    <div className={s.navGreetings}>\r\n      <p className={s.greetings}>Hello, {userMail}</p>\r\n      <Button variant=\"outline-light\" onClick={onBtnClick} className={s.button}>\r\n        Log out\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserMenu.propTypes = {\r\n  userMail: PropTypes.string.isRequired,\r\n};\r\n","export const getUserName = state => state.auth.user.name;\r\nexport const getUserEmail = state => state.auth.user.email;\r\nexport const getUserToken = state => state.auth.token;\r\nexport const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getIsCurrentUser = state => state.auth.isGetCurrentUser;\r\nexport const getError = state => state.auth.error;\r\nexport const getIsLoading = state => state.auth.isLoading;\r\n","import UserMenu from '../UserMenu/UserMenu';\r\nimport { getIsLoggedIn, getUserName } from '../../redux/auth/auth-selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport s from './Navigation.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const userEmail = useSelector(getUserName);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\" className={s.navigation}>\r\n        <Container>\r\n          <Navbar.Brand exact=\"true\" to=\"/\">\r\n            Phonebook\r\n          </Navbar.Brand>\r\n          <Nav>\r\n            <div className={s.navigationBar}>\r\n              <div>\r\n                <NavLink\r\n                  exact\r\n                  to=\"/\"\r\n                  className={s.navLink}\r\n                  activeClassName={s.navLinkActive}\r\n                >\r\n                  Home\r\n                </NavLink>\r\n              </div>\r\n\r\n              {isLoggedIn ? (\r\n                <div className={s.greetingsBox}>\r\n                  <NavLink\r\n                    to=\"/contacts\"\r\n                    className={s.navLink}\r\n                    activeClassName={s.navLinkActive}\r\n                  >\r\n                    Phonebook\r\n                  </NavLink>\r\n\r\n                  <UserMenu userMail={userEmail} className={s.userMenu} />\r\n                </div>\r\n              ) : (\r\n                <div className={s.entrance}>\r\n                  <NavLink\r\n                    exact\r\n                    to=\"/login\"\r\n                    className={s.navLink}\r\n                    activeClassName={s.navLinkActive}\r\n                  >\r\n                    LogIn\r\n                  </NavLink>\r\n\r\n                  <NavLink\r\n                    to=\"/register\"\r\n                    className={s.navLink}\r\n                    activeClassName={s.navLinkActive}\r\n                  >\r\n                    Registration\r\n                  </NavLink>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n","import { Route, Redirect } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { Route, Redirect } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filteredContacts;\r\nexport const getError = state => state.contacts.error;\r\nexport const getIsLoading = state => state.contacts.isLoading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filteredContacts) => {\r\n    const normalizedFilteredName = filteredContacts.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilteredName),\r\n    );\r\n  },\r\n);\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { tokenForFetch } from '../../services/contacts-api';\r\nimport axios from 'axios';\r\n\r\nconst fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistToken = state.auth.token;\r\n    tokenForFetch.set(persistToken);\r\n    try {\r\n      const contacts = await axios.get('/api/contacts');\r\n      return contacts.data.contacts.docs;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst addContacts = createAsyncThunk(\r\n  'contacts/addContacts',\r\n  async ({ name, phone, email }, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistToken = state.auth.token;\r\n    tokenForFetch.set(persistToken);\r\n    try {\r\n      const contact = await axios.post('/api/contacts', {\r\n        name,\r\n        phone,\r\n        email,\r\n      });\r\n\r\n\r\n      return contact.data.contacts;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContacts',\r\n  async (_id, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistToken = state.auth.token;\r\n    tokenForFetch.set(persistToken);\r\n    try {\r\n      await axios.delete(`/api/contacts/${_id}`);\r\n      return _id;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message);\r\n    }\r\n  },\r\n);\r\nconst editContacts = createAsyncThunk(\r\n  'contacts/editContacts',\r\n  async ({ _id, name, phone, email }, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistToken = state.auth.token;\r\n    tokenForFetch.set(persistToken);\r\n    try {\r\n      const contacts = await axios.patch(`/api/contacts/${_id}`, {\r\n        name,\r\n        phone,\r\n        email,\r\n      });\r\n\r\n      return contacts.data.contact;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport { fetchContacts, addContacts, deleteContacts, editContacts };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterContacts = createAction('contactList/filter', contact => ({\r\n  payload: contact,\r\n}));\r\n\r\nexport { filterContacts };\r\n\r\n","import { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contact-selectors';\r\nimport { addContacts } from '../../redux/contacts/contact-operations';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const onChangeInput = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'phone':\r\n        return setPhone(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmitContact = e => {\r\n    e.preventDefault();\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n\r\n    const doubleContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (doubleContact) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(addContacts({ name, phone, email }));\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmitContact} className={s.form}>\r\n      <Form.Group className=\"mb-3\" controlId=\"floatingTextarea\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter name\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={onChangeInput}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"floatingTextarea\">\r\n        <Form.Label>Number</Form.Label>\r\n        <Form.Control\r\n          placeholder=\"Enter number\"\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={phone}\r\n          onChange={onChangeInput}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"floatingTextarea\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control\r\n          placeholder=\"Enter email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          pattern=\"^((([0-9A-Za-z]{1}[-0-9A-z.]{1,}[0-9A-Za-z]{1})|([0-9А-Яа-я]{1}[-0-9А-я.]{1,}[0-9А-Яа-я]{1}))@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$\"\r\n          title=\"Email должен быть реальным, содержать @\"\r\n          required\r\n          value={email}\r\n          onChange={onChangeInput}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"outline-primary\" type=\"submit\">\r\n        Add contact\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\nexport default function Filter({ filter, onFindName }) {\r\n  return (\r\n    <>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text id=\"basic-addon1\">\r\n          Find contact by name\r\n        </InputGroup.Text>\r\n        <FormControl\r\n          placeholder=\"Username\"\r\n          aria-label=\"Username\"\r\n          aria-describedby=\"basic-addon1\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={onFindName}\r\n        />\r\n      </InputGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n};\r\n","import { Button, ListGroup } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport const ContactListItem = ({ contact, onBtnClick, onEditBtnClick }) => {\r\n  const { name, phone, email } = contact;\r\n  return (\r\n    <ListGroup.Item variant=\"warning\" className={s.contactItem}>\r\n      <span className={s.contactInfo}>\r\n        {name}: {phone} : {email}\r\n      </span>\r\n      <div>\r\n        <Button\r\n          variant=\"outline-danger\"\r\n          onClick={onEditBtnClick}\r\n          className={s.contactBtn}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-danger\"\r\n          onClick={onBtnClick}\r\n          className={s.contactBtn}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    _id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","import { ListGroup } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\r\nexport default function ContactList({ contacts, onBtnClick, onEditBtnClick }) {\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {contacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact._id}\r\n          id={contact._id}\r\n          name={contact.name}\r\n          number={contact.phone}\r\n          onBtnClick={() => onBtnClick(contact._id)}\r\n          onEditBtnClick={() => onEditBtnClick(contact._id)}\r\n          contact={contact}\r\n        ></ContactListItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editContacts } from '../../redux/contacts/contact-operations';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { getContacts } from '../../redux/contacts/contact-selectors';\r\n\r\nexport default function ContactEditForm({ contact, closeFunction }) {\r\n  const [name, setName] = useState(contact.name);\r\n  const [phone, setPhone] = useState(contact.phone);\r\n  const [email, setEmail] = useState(contact.email);\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const onChangeInput = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'phone':\r\n        return setPhone(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmitContact = e => {\r\n    e.preventDefault();\r\n\r\n    const { _id } = contact;\r\n    const editedContact = { _id, name, phone, email };\r\n\r\n    const doubleContact = contacts.find(\r\n      contact =>\r\n        contact._id !== _id && contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (doubleContact) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(editContacts(editedContact));\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n    closeFunction();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmitContact}>\r\n      <Form.Group className=\"mb-3\" controlId=\"floatingTextarea\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter name\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={onChangeInput}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"floatingTextarea\">\r\n        <Form.Label>Number</Form.Label>\r\n        <Form.Control\r\n          placeholder=\"Enter number\"\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={phone}\r\n          onChange={onChangeInput}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"floatingTextarea\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control\r\n          placeholder=\"Enter email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          pattern=\"^((([0-9A-Za-z]{1}[-0-9A-z.]{1,}[0-9A-Za-z]{1})|([0-9А-Яа-я]{1}[-0-9А-я.]{1,}[0-9А-Яа-я]{1}))@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$\"\r\n          title=\"Email должен быть реальным, содержать @\"\r\n          required\r\n          value={email}\r\n          onChange={onChangeInput}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"outline-primary\" type=\"submit\">\r\n        Change contact\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modal = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ onClose, clearModal, children }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', onEscClick);\r\n    return () => {\r\n      window.removeEventListener('keydown', onEscClick);\r\n    };\r\n  });\r\n\r\n  const onEscClick = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const onBackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={onBackdropClick}>\r\n      <div className={s.Modal}>{children}</div>\r\n    </div>,\r\n    modal,\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  getFilteredContacts,\r\n  getFilter,\r\n  getError,\r\n  getIsLoading,\r\n  getContacts,\r\n} from '../redux/contacts/contact-selectors';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  fetchContacts,\r\n  deleteContacts,\r\n} from '../redux/contacts/contact-operations';\r\nimport { filterContacts } from '../redux/contacts/contact-actions';\r\n\r\nimport s from './ContactsPage.module.css';\r\n\r\nimport Section from '../components/Section/Section';\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport Filter from '../components/Filter/Filter';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport TechInfo from '../components/TechInfo/TechInfo';\r\nimport ContactEditForm from '../components/ContactEditForm/ContactEditForm';\r\nimport Modal from '../components/Modal/Modal';\r\n\r\nexport default function ContactsPage() {\r\n  const contactsList = useSelector(getFilteredContacts);\r\n  const filteredContacts = useSelector(getFilter);\r\n  const errorMessage = useSelector(getError);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const contacts = useSelector(getContacts);\r\n  const [contact, setContact] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const onDeleteContact = id => dispatch(deleteContacts(id));\r\n\r\n  const findName = e => {\r\n    dispatch(filterContacts(e.target.value));\r\n  };\r\n\r\n  const toggleModal = e => {\r\n    setShowModal(showModal => !showModal);\r\n  };\r\n\r\n  const onEditContact = id => {\r\n    const contact = contacts.find(contact => contact._id === id);\r\n    setContact(contact);\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section title={'Phonebook'}>\r\n        <ContactForm />\r\n        <h2 className={s.title}>Contacts</h2>\r\n        {contacts.length > 1 && (\r\n          <Filter value={filteredContacts} onFindName={findName} />\r\n        )}\r\n        {errorMessage && <TechInfo message={errorMessage} />}\r\n        {isLoading && <TechInfo message={'Loading...'} />}\r\n        {contactsList.length !== 0 && (\r\n          <ContactList\r\n            contacts={contactsList}\r\n            onBtnClick={onDeleteContact}\r\n            onEditBtnClick={onEditContact}\r\n          />\r\n        )}\r\n        {showModal && (\r\n          <Modal onClose={toggleModal}>\r\n            <ContactEditForm contact={contact} closeFunction={toggleModal} />\r\n          </Modal>\r\n        )}\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nexport const Link = ({message, onClickLink}) => {\r\n    return (\r\n        <Button variant=\"link\" type={'button'} onClick={onClickLink}>{message}</Button>\r\n    )\r\n}\r\n","import { useEffect } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Section from '../Section/Section';\r\nimport TechInfo from '../TechInfo/TechInfo';\r\nimport RegisterForm from '../RegisterForm/RegisterForm';\r\nimport LoginForm from '../LoginForm/LoginForm';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport PrivateRoute from '../PrivateRoute/PrivateRoute';\r\nimport PublicRoute from '../PublicRoute/PublicRoute';\r\nimport {\r\n  getIsCurrentUser,\r\n  getError,\r\n  getIsLoading,\r\n  getUserName,\r\n  getUserToken,\r\n  getUserEmail,\r\n} from '../../redux/auth/auth-selectors';\r\nimport { getCurrentUser, verify } from '../../redux/auth/auth-operations';\r\n\r\nimport ContactsPage from '../../views/ContactsPage';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { Link } from '../Link/Link';\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector(getIsCurrentUser);\r\n  const error = useSelector(getError);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const user = useSelector(getUserName);\r\n  const token = useSelector(getUserToken);\r\n  const email = useSelector(getUserEmail);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {currentUser ? (\r\n        <Section title={'Phonebook'}></Section>\r\n      ) : (\r\n        <>\r\n          <Navigation />\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\">\r\n              <Section title={'Welcome to your wonderful phonebook'}></Section>\r\n            </PublicRoute>\r\n            <PublicRoute\r\n              exact\r\n              path=\"/register\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n            >\r\n              <Section title={'Registration'}>\r\n                <RegisterForm />\r\n                {isLoading && (\r\n                  <TechInfo message={'Loading'}>\r\n                    <Spinner animation=\"grow\" variant=\"primary\" />\r\n                  </TechInfo>\r\n                )}\r\n                {user && !token && (\r\n                  <TechInfo message={'Please verify your email'}>\r\n                    <TechInfo message={'If you can not find message'}>\r\n                      <Link\r\n                        message={'click here'}\r\n                        onClickLink={() => dispatch(verify({ email }))}\r\n                      ></Link>\r\n                    </TechInfo>\r\n                  </TechInfo>\r\n                )}\r\n                {error && <TechInfo message={error} />}\r\n              </Section>\r\n            </PublicRoute>\r\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\r\n              <Section title={'Login'}>\r\n                <LoginForm />\r\n                {isLoading && (\r\n                  <TechInfo message={'Loading'}>\r\n                    <Spinner animation=\"grow\" variant=\"primary\" />\r\n                  </TechInfo>\r\n                )}\r\n                {error && <TechInfo message={error}></TechInfo>}\r\n                {error?.includes('verificated') && (\r\n                  <TechInfo message={'If you can not find message'}>\r\n                    <Link\r\n                      message={'click here'}\r\n                      onClickLink={() => dispatch(verify({ email }))}\r\n                    ></Link>\r\n                  </TechInfo>\r\n                )}\r\n              </Section>\r\n            </PublicRoute>\r\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n              {isLoading ? (\r\n                <TechInfo message={'Loading'}>\r\n                  <Spinner animation=\"grow\" variant=\"primary\" />\r\n                </TechInfo>\r\n              ) : (\r\n                <ContactsPage />\r\n              )}\r\n            </PrivateRoute>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { filterContacts } from './contact-actions';\r\nimport {\r\n  fetchContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n  editContacts,\r\n} from './contact-operations';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n  [addContacts.fulfilled]: (state, action) => [...state, action.payload],\r\n  [editContacts.fulfilled]: (state, action) =>[action.payload, ...state.filter(({_id}) => _id!==action.payload._id)],\r\n\r\n  [deleteContacts.fulfilled]: (state, action) =>\r\n    state.filter(contact => contact._id !== action.payload),\r\n});\r\n\r\nconst filteredContacts = createReducer('', {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, action) => action.payload,\r\n  [addContacts.rejected]: (_, action) => action.payload,\r\n  [editContacts.rejected]: (_, action) => action.payload,\r\n  [deleteContacts.rejected]: (_, action) => action.payload,\r\n  [fetchContacts.pending]: () => null,\r\n  [addContacts.pending]: () => null,\r\n  [deleteContacts.pending]: () => null,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [addContacts.pending]: () => true,\r\n  [editContacts.pending]: () => true,\r\n  [deleteContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [addContacts.fulfilled]: () => false,\r\n  [editContacts.fulfilled]: () => false,\r\n  [deleteContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContacts.rejected]: () => false,\r\n  [editContacts.rejected]: () => false,\r\n  [deleteContacts.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filteredContacts,\r\n  error,\r\n  isLoading,\r\n});\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { register, logIn, logOut, getCurrentUser, verify } from './auth-operations';\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n\r\n  initialState: {\r\n    user: { name: null, email: null, password: null },\r\n    token: null,\r\n    isLoggedIn: false,\r\n    isGetCurrentUser: false,\r\n    error: null,\r\n    isLoading: false,\r\n  },\r\n  extraReducers: {\r\n    [register.pending](state, action) {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n    [register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.isLoggedIn = false;\r\n      state.isLoading = false;\r\n    },\r\n    [register.rejected](state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [verify.pending](state, action) {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n    [verify.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n    },\r\n    [verify.rejected](state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [logIn.pending](state, action) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.isLoading = false;\r\n    },\r\n    [logIn.rejected](state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [logOut.pending](state, action) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null, password: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n      state.isLoading = false;\r\n    },\r\n    [logOut.rejected](state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [getCurrentUser.pending](state, action) {\r\n      state.isFetchingCurrentUser = true;\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [getCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n      state.isLoading = false;\r\n    },\r\n    [getCurrentUser.rejected](state, action) {\r\n      state.isFetchingCurrentUser = false;\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import contactReducer from './contacts/contact-reducers';\r\nimport authReducer from './auth/auth-slice';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nexport { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationBar\":\"Navigation_navigationBar__2g1tU\",\"navLink\":\"Navigation_navLink__1hw0d\",\"greetingsBox\":\"Navigation_greetingsBox__1SIPH\",\"entrance\":\"Navigation_entrance__1W9Hq\",\"navLinkActive\":\"Navigation_navLinkActive__2gJx_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__39PL9\",\"contactInfo\":\"ContactListItem_contactInfo__JGHAv\",\"button\":\"ContactListItem_button__CkyL9\",\"contactBtn\":\"ContactListItem_contactBtn__1DIO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navGreetings\":\"UserMenu_navGreetings__76RhB\",\"greetings\":\"UserMenu_greetings__vxGTt\",\"button\":\"UserMenu_button__1EEke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1cEb-\",\"title\":\"Section_title__1kDTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1l69F\",\"Modal\":\"Modal_Modal__1J8JY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"RegisterForm_label__3Edvi\",\"form\":\"RegisterForm_form__tdbgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2r7Qn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactsPage_title__2sxxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1WFPy\",\"label\":\"ContactForm_label__2IC9J\",\"input\":\"ContactForm_input__AuR1J\",\"button\":\"ContactForm_button__3toDz\"};"],"sourceRoot":""}